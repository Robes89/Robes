/*ÃœÃœÃœÃœÃœÃœÃœÃœÃœÃœÃœÃœÃœÃœÃœÃœÃœÃœÃœÃœÃœÃœÃœÃœÃœÃœÃœÃœÃœÃœÃœÃœÃœÃœÃœÃœÃœÃœÃœÃœÃœÃœÃœÃœÃœÃœÃœÃœÃœÃœÃœÃœÃœÃœÃœÃœÃœÃœÃœÃœÃœÃœÃœÃœÃœÃœÃœÃœÃœÃœÃœÃœÃœÃœÃœ
Â±Â±Â±Â±Â±Â±Â±Â±Â±Â±Â±Â±Â±Â±Â±Â±Â±Â±Â±Â±Â±Â±Â±Â±Â±Â±Â±Â±Â±Â±Â±Â±Â±Â±Â±Â±Â±Â±Â±Â±Â±Â±Â±Â±Â±Â±Â±Â±Â±Â±Â±Â±Â±Â±Â±Â±Â±Â±Â±Â±Â±Â±Â±Â±Â±Â±Â±Â±Â±Â±Â±Â±Â±Â±Â±Â±Â±
Â±Â±ÃƒÃ„Ã„Ã„Ã„Ã„Ã„Ã„Ã„Ã„Ã„Ã…Ã„Ã„Ã„Ã„Ã„Ã„Ã„Ã„Ã„Ã„Ã„Ã‚Ã„Ã„Ã„Ã„Ã„Ã„Ã„Ã‚Ã„Ã„Ã„Ã„Ã„Ã„Ã„Ã„Ã„Ã„Ã„Ã„Ã„Ã„Ã„Ã„Ã„Ã„Ã„Ã„Ã„Ã„Ã‚Ã„Ã„Ã„Ã„Ã„Ã„Ã‚Ã„Ã„Ã„Ã„Ã„Ã„Ã„Ã„Ã„Ã„Â´Â±Â±
Â±Â±Â³ Funcao   Â³ SF1100I  Â³ Autor Â³ CESAR CUNHA          Â³ Data Â³08/11/2016 Â³Â±Â±
Â±Â±ÃƒÃ„Ã„Ã„Ã„Ã„Ã„Ã„Ã„Ã„Ã„Ã…Ã„Ã„Ã„Ã„Ã„Ã„Ã„Ã„Ã„Ã„Ã„Ã�Ã„Ã„Ã„Ã„Ã„Ã„Ã„Ã�Ã„Ã„Ã„Ã„Ã„Ã„Ã„Ã„Ã„Ã„Ã„Ã„Ã„Ã„Ã„Ã„Ã„Ã„Ã„Ã„Ã„Ã„Ã�Ã„Ã„Ã„Ã„Ã„Ã„Ã�Ã„Ã„Ã„Ã„Ã„Ã„Ã„Ã„Ã„Ã„Â´Â±Â±
Â±Â±Â³Descricao Â³ Ponto de Entrada na gravaÃ§ao do documento de entrada para  Â³Â±Â±
Â±Â±Â³          Â³ gravaÃ§Ã£o e tratamento da geraÃ§Ã£o etiqueta identificaÃ§Ã£o CB0Â³Â±Â±
Â±Â±Â³          															  Â³Â±Â±
Â±Â±Â³ 																	  Â³Â±Â±
Â±Â±ÃƒÃ„Ã„Ã„Ã„Ã„Ã„Ã„Ã„Ã„Ã„Ã…Ã„Ã„Ã„Ã„Ã„Ã„Ã„Ã„Ã„Ã„Ã„Ã„Ã„Ã„Ã„Ã„Ã„Ã„Ã„Ã„Ã„Ã„Ã„Ã„Ã„Ã„Ã„Ã„Ã„Ã„Ã„Ã„Ã„Ã„Ã„Ã„Ã„Ã„Ã„Ã„Ã„Ã„Ã„Ã„Ã„Ã„Ã„Ã„Ã„Ã„Ã„Ã„Ã„Ã„Ã„Ã„Ã„Ã„Ã„Ã„Â´Â±Â±
Â±Â±Â³Sintaxe   Â³ SF1100I()                                                  Â³Â±Â±
Â±Â±Ã€Ã„Ã„Ã„Ã„Ã„Ã„Ã„Ã„Ã„Ã„Ã�Ã„Ã„Ã„Ã„Ã„Ã„Ã„Ã„Ã„Ã„Ã„Ã„Ã„Ã„Ã„Ã„Ã„Ã„Ã„Ã„Ã„Ã„Ã„Ã„Ã„Ã„Ã„Ã„Ã„Ã„Ã„Ã„Ã„Ã„Ã„Ã„Ã„Ã„Ã„Ã„Ã„Ã„Ã„Ã„Ã„Ã„Ã„Ã„Ã„Ã„Ã„Ã„Ã„Ã„Ã„Ã„Ã„Ã„Ã„Ã„Ã™Â±Â±
Â±Â±Â±Â±Â±Â±Â±Â±Â±Â±Â±Â±Â±Â±Â±Â±Â±Â±Â±Â±Â±Â±Â±Â±Â±Â±Â±Â±Â±Â±Â±Â±Â±Â±Â±Â±Â±Â±Â±Â±Â±Â±Â±Â±Â±Â±Â±Â±Â±Â±Â±Â±Â±Â±Â±Â±Â±Â±Â±Â±Â±Â±Â±Â±Â±Â±Â±Â±Â±Â±Â±Â±Â±Â±Â±Â±Â±
ÃŸÃŸÃŸÃŸÃŸÃŸÃŸÃŸÃŸÃŸÃŸÃŸÃŸÃŸÃŸÃŸÃŸÃŸÃŸÃŸÃŸÃŸÃŸÃŸÃŸÃŸÃŸÃŸÃŸÃŸÃŸÃŸÃŸÃŸÃŸÃŸÃŸÃŸÃŸÃŸÃŸÃŸÃŸÃŸÃŸÃŸÃŸÃŸÃŸÃŸÃŸÃŸÃŸÃŸÃŸÃŸÃŸÃŸÃŸÃŸÃŸÃŸÃŸÃŸÃŸÃŸÃŸÃŸÃŸÃŸÃŸÃŸÃŸÃŸÃŸÃŸ*/
#Include "PROTHEUS.CH"
User Function SF1100I()
local coper:=''
Local nResto	:= 0
Local lImpNova	:= .T.
Local lImpEtiRo := .T.
Local aArea		:= GetArea()
Local nX		:= 1
Local cNumSeq	:= ""  
Local aItens	:= {}
Local lAjustaQE := SuperGetMv("MV_CBAJUQE",.F.,.F.) 
Local cPictB1QE := PesqPict("SB1","B1_QE")
Local cPicQtd   := CBPictQtde()
Local lWmsNew	:= SuperGetMv("MV_WMSNEW",.F.,.F.)
Local oProduto	:= Nil
Local cNotade:=''
local lOrigNota:=.t.
local lAuto:=Nil       

//DEFAULT lAuto := .f.

CB0->(DbSetOrder(1))
dbSelectArea('SF1')
SF1->(dbsetOrder(1))
SD1->(dbsetOrder(1))
SB1->(dbsetOrder(1))
SB5->(dbsetOrder(1))

//cNotade:=SF1->F1_DOC+SF1->F1_SERIE+SF1->F1_FORNECE+SF1->F1_LOJA
//SF1->(dbSeek(xFilial("SF1")+cNotade),.t. )

  // Exclusao da etiquetas antigas
DbselectArea('CB0')  
DbSetOrder(6)
DbSeek(xFilial("CB0")+SF1->F1_DOC+SF1->F1_SERIE+SF1->F1_FORNECE+SF1->F1_LOJA)
While CB0->(! Eof() .and. xFilial("CB0")+SF1->F1_DOC+SF1->F1_SERIE+SF1->F1_FORNECE+SF1->F1_LOJA ==;
	CB0_FILIAL+CB0_NFENT+CB0_SERIEE+CB0_FORNEC+CB0_LOJAFO)
	RecLock("CB0")
	CB0->(DbDelete())
	CB0->(MsUnlock())
	CB0->(DbSkip())
Enddo
 
 dBselectArea('SD1')		
 Dbsetorder(1)		                     
 dbSeek(xFilial("SD1")+SF1->F1_DOC+SF1->F1_SERIE+SF1->F1_FORNECE+SF1->F1_LOJA)	
 
 While !EOF() .and.;
   	xFilial('SD1')  == SD1->D1_FILIAL .and. ;
	SD1->D1_DOC     == SF1->F1_DOC    .and. ;
	SD1->D1_SERIE   == SF1->F1_SERIE  .and. ;
	SD1->D1_FORNECE == SF1->F1_FORNECE .and.;
	SD1->D1_LOJA    == SF1->F1_LOJA
					
	If ! Empty(SD1->D1_TES) .And. !Empty(SD1->D1_PALLET) 
		SF4->(MsSeek(xFilial("SF4")+SD1->D1_TES))
		If SF4->F4_ESTOQUE ='S'
			
			SB1->(MsSeek(xFilial("SB1")+SD1->D1_COD))
			nresto:= 0
			If CBProdUnit(SD1->D1_COD) .and. ! CBQtdVar(SD1->D1_COD)
			// quantidade de embalagem fixa no B1_QE
				nQE   := CBQEmbI()
				nQtde := Int(SD1->D1_QUANT/nQE)
				nResto  :=SD1->D1_QUANT%nQE
							
			Else
							//granel ou //quantidade de embalagem variada conforme item de nota
							nQE   := SD1->D1_QUANT
				nQtde := 1
			EndIf
				/*	
			If ! CBImpEti(SB1->B1_COD)
				SD1->(dbSkip()	)
				lImpEtiRo:= .F.
				Loop
			EndIf 
			*/
			If RetFldProd(SB1->B1_COD,"B1_LOCALIZ") == "S"
				cNumSeq := ""
			Else            
				cNumSeq := SD1->D1_NUMSEQ
			EndIf
			
			U_ACDTTB01({nQE,,,nQtde,SD1->D1_DOC,SD1->D1_SERIE,SD1->D1_FORNECE,SD1->D1_LOJA,SD1->D1_LOCAL,,cNumSeq,SD1->D1_LOTECTL,SD1->D1_NUMLOTE,SD1->D1_DTVALID,,,,,,,,0,SD1->D1_ITEM,coper})
			If nResto > 0
				U_ACDTTB01({nResto,,,1,SD1->D1_DOC,SD1->D1_SERIE,SD1->D1_FORNECE,SD1->D1_LOJA,SD1->D1_LOCAL,,cNumSeq,SD1->D1_LOTECTL,SD1->D1_NUMLOTE,SD1->D1_DTVALID,,,,,,,,0,SD1->D1_ITEM,coper})
			EndIf
        	
			lImpEtiRo :=.T.			
		Endif
	Endif	
	lImpEtiRo:=.T.
	
	dbSetorder(1)
	dbSkip()
End	

RestArea(aArea)
Return







		//AJusta Qtde por embalagem do produto
		/*      
		If lAjustaQE
		   aItens:={}
			SD1->(dbSeek(xFilial("SD1")+SF1->F1_DOC+SF1->F1_SERIE+SF1->F1_FORNECE+SF1->F1_LOJA)	)
			While SD1->(!EOF()) .and.;
				xFilial('SD1')  == SD1->D1_FILIAL .and. ;
				SD1->D1_DOC     == SF1->F1_DOC    .and. ;
				SD1->D1_SERIE   == SF1->F1_SERIE  .and. ;
				SD1->D1_FORNECE == SF1->F1_FORNECE .and.;
				SD1->D1_LOJA    == SF1->F1_LOJA 
				
				If cPaisLoc <> "BRA" .And. !Empty (SD1->D1_REMITO)
					SD1->(dbSkip())
					Loop
				EndIf              
				
				MTWmsPai(SD1->D1_COD,@oProduto)
				
				If lWmsNew .And. SB5->(MsSeek(xFilial("SB5")+SD1->D1_COD)) .And. SB5->B5_CTRWMS == '1' .And.;
					oProduto:aProduto[1][1] <> SD1->D1_COD  
					For nX:= 1 To Len(oProduto:aProduto)
						
						SB1->(MsSeek(xFilial("SB1")+oProduto:aProduto[nX][1]))
						nQE   := CBQEmbI()
						nQtde := Int(SD1->D1_QUANT*oProduto:aProduto[nX][2]/nQE)
						nResto  :=SD1->D1_QUANT*oProduto:aProduto[nX][2]%nQE                                               
						If nResto >0
						   nQtde++
						EndIf
						SD1->(aadd(aItens,{oProduto:aProduto[nX][1],Transform(SD1->D1_QUANT*oProduto:aProduto[nX][2],cPicQtd),Transform(nQe,cPictB1QE),;
												  Transform(nResto,cPicQtd),Transform(nQtde,cPicQtd)}))	
					Next nX
				Else
					SB1->(MsSeek(xFilial("SB1")+SD1->D1_COD))
					nQE   := CBQEmbI()
					nQtde := Int(SD1->D1_QUANT/nQE)
					nResto  :=SD1->D1_QUANT%nQE                                               
					If nResto >0
					   nQtde++
					EndIf
					SD1->(aadd(aItens,{D1_COD,Transform(SD1->D1_QUANT,cPicQtd),Transform(nQe,cPictB1QE),;
												  Transform(nResto,cPicQtd),Transform(nQtde,cPicQtd)}))
				Endif

				SD1->(dbSkip()	)
			End
			AjustaQE(aItens,STR0011+SF1->F1_DOC+" "+SerieNfId("SF1",2,"F1_SERIE")+STR0012+SF1->F1_FORNECE+" "+SF1->F1_LOJA) //"Nota: "###" Forn: "
		EndIf
		*/	 
      //******************************************		

      
      			/*
			MTWmsPai(SD1->D1_COD,@oProduto)
						
			If lWmsNew .And. SB5->(MsSeek(xFilial("SB5")+SD1->D1_COD)) .And. SB5->B5_CTRWMS == '1' .And.;
				oProduto:aProduto[1][1] <> SD1->D1_COD  			
				
				For nX:= 1 To Len(oProduto:aProduto)
					SB1->(MsSeek(xFilial("SB1")+oProduto:aProduto[nX][1]))
					nresto:= 0
					If CBProdUnit(oProduto:aProduto[nX][1]) .and. ! CBQtdVar(oProduto:aProduto[nX][1])
						// quantidade de embalagem fixa no B1_QE
						nQE   := CBQEmbI()
						nQtde := Int((SD1->D1_QUANT*oProduto:aProduto[nX][2])/nQE)
						nResto  :=(SD1->D1_QUANT*oProduto:aProduto[nX][2])%nQE
						
					Else
						//granel ou //quantidade de embalagem variada conforme item de nota
						nQE   := oProduto:aProduto[nX][2]
						nQtde := 1
					EndIf
					
					If CBImpEti(SB1->B1_COD)
						 
						If RetFldProd(SB1->B1_COD,"B1_LOCALIZ") == "S"
							cNumSeq := ""
						Else            
							cNumSeq := SD1->D1_NUMSEQ
						EndIf
						
						AcdGeraCBN(SD1->D1_COD,nQtde)								
						
						//ExecBlock("IMG01",,,{nQE,,,nQtde,SD1->D1_DOC,SD1->D1_SERIE,SD1->D1_FORNECE,SD1->D1_LOJA,SD1->D1_LOCAL,,cNumSeq,SD1->D1_LOTECTL,SD1->D1_NUMLOTE,SD1->D1_DTVALID,,,,,,,,0,SD1->D1_ITEM})
						
						If nResto > 0
							AcdGeraCBN(SD1->D1_COD,1)
							//ExecBlock("IMG01",,,{nResto,,,1,SD1->D1_DOC,SD1->D1_SERIE,SD1->D1_FORNECE,SD1->D1_LOJA,SD1->D1_LOCAL,,cNumSeq,SD1->D1_LOTECTL,SD1->D1_NUMLOTE,SD1->D1_DTVALID,,,,,,,,0,SD1->D1_ITEM})
						EndIf
						
						
						lImpEtiRo :=.T.
					Else
						lImpEtiRo:= .F.
					EndIf	
					
				Next nX
			Else	
				SB1->(MsSeek(xFilial("SB1")+SD1->D1_COD))
				nresto:= 0
				If CBProdUnit(SD1->D1_COD) .and. ! CBQtdVar(SD1->D1_COD)
					// quantidade de embalagem fixa no B1_QE
					nQE   := CBQEmbI()
					nQtde := Int(SD1->D1_QUANT/nQE)
					nResto  :=SD1->D1_QUANT%nQE
					
				Else
					//granel ou //quantidade de embalagem variada conforme item de nota
					nQE   := SD1->D1_QUANT
					nQtde := 1
				EndIf
				If ! CBImpEti(SB1->B1_COD)
					SD1->(dbSkip()	)
					lImpEtiRo:= .F.
					Loop
				EndIf 
				
				If RetFldProd(SB1->B1_COD,"B1_LOCALIZ") == "S"
					cNumSeq := ""
				Else            
					cNumSeq := SD1->D1_NUMSEQ
				EndIf
						/*
				ExecBlock("IMG01",,,{nQE,,,nQtde,SD1->D1_DOC,SD1->D1_SERIE,SD1->D1_FORNECE,SD1->D1_LOJA,SD1->D1_LOCAL,,cNumSeq,SD1->D1_LOTECTL,SD1->D1_NUMLOTE,SD1->D1_DTVALID,,,,,,,,0,SD1->D1_ITEM})
				If nResto > 0
					ExecBlock("IMG01",,,{nResto,,,1,SD1->D1_DOC,SD1->D1_SERIE,SD1->D1_FORNECE,SD1->D1_LOJA,SD1->D1_LOCAL,,cNumSeq,SD1->D1_LOTECTL,SD1->D1_NUMLOTE,SD1->D1_DTVALID,,,,,,,,0,SD1->D1_ITEM})
				EndIf
				
				lImpEtiRo :=.T.	
			Endif
			*/
      